generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  username    String  @unique()
  displayName String  @map("display_name")
  avatarUrl   String? @map("avatar_url")

  convertations Convertation[]
  links         UserLink[]
  credentials   UserCredential[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model UserCredential {
  id String @id @default(uuid())

  userId       String  @map("user_id")
  passwordHash String  @map("password_hash")
  isActive     Boolean @default(true) @map("is_active")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_credentials")
}

model UserLink {
  userId   String           @map("user_id")
  provider UserLinkProvider

  providerUserId String  @map("provider_user_id")
  accessKey      String? @map("access_key")
  refreshKey     String? @map("refresh_key")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([providerUserId, provider])
  @@unique([userId, provider])
  @@map("user_links")
}

model Convertation {
  id String @id @default(uuid())

  state       ConvertationState @default(PENDING)
  fileFromUrl String            @map("file_from_url")
  fileToUrl   String?           @map("file_to_url")

  schema   ConvertationSchema @relation(fields: [schemaId], references: [id])
  schemaId Int                @map("schema_id")

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("converts")
}

model ConvertationSchema {
  id Int @id @default(autoincrement())

  fileFromFormat       ConvertationFormat @map("file_from_format")
  fileToFormat         ConvertationFormat @map("file_to_format")
  convertationEndpoint String             @map("convertation_endpoint")

  convertations Convertation[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("convertation_schema")
}

enum UserLinkProvider {
  GOOGLE

  @@map("user_link_provider")
}

enum ConvertationState {
  PENDING
  SUCCESS
  FAILED

  @@map("convertation_states")
}

enum ConvertationFormat {
  PDF
  JPG

  @@map("convertation_formats")
}
