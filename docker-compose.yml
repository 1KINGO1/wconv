version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://admin:admin@postgres:5432/main?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
    env_file:
      - .env.docker
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network
  postgres:
    image: postgres:latest
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: main
    networks:
      app-network:
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:7.2-alpine
    container_name: redis
    networks:
      app-network:
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: always
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
  redis-data:
  nginx_logs:
networks:
  app-network: